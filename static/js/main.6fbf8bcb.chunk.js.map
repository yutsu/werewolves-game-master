{"version":3,"sources":["app.js","serviceWorker.js","index.js"],"names":["JapaneseNames","villager","werewolf","WerewolfGame","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDeleteOptions","bind","assertThisInitialized","handlePick","handleAddOption","handleDeleteOption","handleSelectRoles","updateNumberOfRoles","determineRoles","nightActionRecord","handleKilledAtNight","handleWinningSide","mostSuspiciousPlayer","morningPhase","nightPhase","nextPlayer","exile","restart","state","players","players_selected","players_with_roles","role_determined","phase","possible_roles","n_each_role","seer","knight","suspected_players","current_player_id","night_action_to_be_killed","to_be_exiled","json","localStorage","getItem","JSON","parse","setState","e","prevProps","prevState","length","stringify","setItem","console","log","optionToRemove","filter","option","randomNum","Math","floor","random","alert","indexOf","concat","num","role","_this2","numberOfPlayers","numberOfSelectedRoles","roles","push","i","j","_ref","player","Villager","Werewolf","Seer","current_role","target_player","n_players","name","killed_player","alive","dead","x","memo","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","max","_i2","_Object$values","values","result","_i3","_Object$keys","keys","key","exile2","morningActionCompletedPhase","reduce","a","b","count","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","side","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","numberOfAliveVillagers","numberOfAliveWerewolves","register","react_default","createElement","app_Header","subtitle","app_Action","hasOptions","app_Options","app_AddOption","app_SelectRoles","app_RoleOptions","night","app_ShowRole","night_result","app_ResultOfNight","morning_exile","app_ListToBeExiled","morning_result","app_ResultOfMorning","React","Component","Header","title","defaultProps","Action","onClick","disabled","Options","map","app_Option","optionText","Option","AddOption","_this3","error","preventDefault","target","elements","trim","onSubmit","type","SelectRoles","RoleOptions","app_Counter","ShowRole","action_sentence","app_ShowListOfPlayers","current_player","ShowListOfPlayers","ResultOfNight","y","ResultOfMorning","ListToBeExiled","Counter","_this4","handleAddOne","handleMinusOne","handleReset","_this5","Player","killable","_this6","_this7","_this8","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fbf8bcb.chunk.js","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n\nconst JapaneseNames = {\n  'villager': '村人',\n  'werewolf': '人狼'\n}\n\nclass WerewolfGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteOptions = this.handleDeleteOptions.bind(this);\n    this.handlePick = this.handlePick.bind(this);\n    this.handleAddOption = this.handleAddOption.bind(this);\n    this.handleDeleteOption = this.handleDeleteOption.bind(this);\n    this.handleSelectRoles = this.handleSelectRoles.bind(this);\n    this.updateNumberOfRoles = this.updateNumberOfRoles.bind(this);\n    this.determineRoles = this.determineRoles.bind(this);\n    this.nightActionRecord = this.nightActionRecord.bind(this);\n    this.handleKilledAtNight = this.handleKilledAtNight.bind(this);\n    this.handleWinningSide = this.handleWinningSide.bind(this);\n    this.mostSuspiciousPlayer = this.mostSuspiciousPlayer.bind(this);\n    this.morningPhase = this.morningPhase.bind(this);\n    this.nightPhase = this.nightPhase.bind(this);\n    this.nextPlayer = this.nextPlayer.bind(this);\n    this.exile = this.exile.bind(this);\n    this.restart = this.restart.bind(this);\n    this.state = {\n      players: [],\n      players_selected: false,\n      players_with_roles: [],\n      role_determined: false,\n      phase: 'night',\n      possible_roles: ['villager', 'werewolf', 'seer', 'knight'],\n      n_each_role: {'villager':0, 'werewolf':0, 'seer':0, 'knight':0},\n      suspected_players: [],\n      current_player_id: 0,\n      night_action_to_be_killed: [],\n      to_be_exiled: []\n    };\n  }\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem('players');\n      const players = JSON.parse(json);\n\n      if (players) {\n        this.setState(() => ({ players }));\n      }\n    } catch (e) {\n      // Do nothing at all\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.players.length !== this.state.players.length) {\n      const json = JSON.stringify(this.state.players);\n      localStorage.setItem('players', json);\n    }\n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n  handleDeleteOptions() {\n    this.setState(() => ({ players: [] }));\n  }\n  handleDeleteOption(optionToRemove) {\n    this.setState((prevState) => ({\n      players: prevState.players.filter((option) => optionToRemove !== option)\n    }));\n  }\n  handlePick() {\n    const randomNum = Math.floor(Math.random() * this.state.players.length);\n    const option = this.state.players[randomNum];\n    alert(option);\n  }\n  handleAddOption(option) {\n    if (!option) {\n      return 'Enter valid value to add item';\n    } else if (this.state.players.indexOf(option) > -1) {\n      return 'この名前はすでに使われています｡';\n    }\n\n    this.setState((prevState) => ({\n      players: prevState.players.concat(option)\n    }));\n  }\n\n  handleSelectRoles(){\n    console.log('select roles');\n    this.setState(() => ({ players_selected: true }));\n  }\n\n  updateNumberOfRoles(num, role){\n    this.setState((prevState) => (prevState.n_each_role[role] = num + (num) * (num) *prevState.n_each_role[role]));\n  }\n\n  determineRoles(){\n    if (this.numberOfPlayers() === this.numberOfSelectedRoles()){\n      this.setState(() => ({ role_determined: true }));\n\n      let roles = [];\n      let n_each_role = this.state.n_each_role;\n      let role;\n      for (role in n_each_role) {\n        while (n_each_role[role] > 0) {\n          roles.push(role);\n          n_each_role[role] --;\n        }\n      }\n\n      // shuffle roles\n      for (let i = roles.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [roles[i], roles[j]] = [roles[j], roles[i]];\n      }\n\n      for (let i=0; i < roles.length; i++) {\n        if (roles[i] === 'villager') {\n          let player = new Villager(this.state.players[i], true, 'villager', 0, true)\n          this.setState((prevState) => ({\n            players_with_roles: prevState.players_with_roles.concat(player)\n          }));\n        }\n        if (roles[i] === 'werewolf') {\n          let player = new Werewolf(this.state.players[i], true, 'werewolf', 1, true)\n          this.setState((prevState) => ({\n            players_with_roles: prevState.players_with_roles.concat(player)\n          }));\n        }\n        if (roles[i] === 'seer') {\n          let player = new Seer(this.state.players[i], true, 'seer', 0, true)\n          this.setState((prevState) => ({\n            players_with_roles: prevState.players_with_roles.concat(player)\n          }));\n        }\n      }\n\n    } else{\n      console.log('n_roles != n_players')\n    }\n  }\n\n  nightActionRecord(current_player_id, current_role, target_player, n_players) {\n    if (current_role === 'villager') {\n      this.setState((prevState) => ({\n              suspected_players: prevState.suspected_players.concat(target_player.name)\n            }));\n    } else if (current_role === 'werewolf') {\n      this.setState((prevState) => ({\n              night_action_to_be_killed: prevState.night_action_to_be_killed.concat(target_player)\n            }));\n\n    } else {\n      console.log('todo')\n    }\n\n    // if (current_player_id < n_players - 1){\n    //  this.setState((prevState) => {\n    //   current_player_id: prevState.current_player_id ++\n    //  });\n    // } else {\n    //   this.setState((prevState) => {\n    //   current_player_id: prevState.current_player_id = 0\n    //  });\n    //   this.setState((prevState) => {\n    //   night_action_completed: prevState.night_action_completed = true\n    //   })\n    // }\n    this.nextPlayer(current_player_id, current_role, target_player, n_players)\n}\n\n  nextPlayer(current_player_id, current_role, target_player, n_players) {\n    if (current_player_id < n_players - 1){\n     this.setState((prevState) => {\n      current_player_id: prevState.current_player_id ++\n     });\n    } else {\n      this.setState((prevState) => {\n      current_player_id: prevState.current_player_id = 0\n     });\n      this.setState((prevState) => {\n      phase: prevState.phase = 'night_action_completed'\n      })\n    }\n  }\n\n  handleKilledAtNight(){\n\n    let killed_player = this.state.night_action_to_be_killed[0];\n    killed_player.alive = false;\n    return killed_player.name\n  }\n\n  mostSuspiciousPlayer(dead){\n    let memo = {}\n    let x;\n    for (x of this.state.suspected_players) {\n      if (x === dead){ continue;}\n      if (memo[x]) {\n        memo[x] ++;\n      } else {\n        memo[x] = 1;\n      }\n    }\n\n    let max = 0\n    let i;\n    for (i of Object.values(memo)){\n      if (i > max){\n        max = i\n      }\n    }\n\n    let result = []\n    for (let key of Object.keys(memo)) {\n      if (memo[key] === max) {\n        result.push(key)\n      }\n    }\n\n    return result\n  }\n  exile(player) {\n    player.alive = false;\n    this.exile2(player.name);\n    this.morningActionCompletedPhase();\n  }\n  exile2(player) {\n    this.setState((prevState) => ({to_be_exiled: [player] }));\n  }\n\n  morningActionCompletedPhase() {\n    this.setState((prevState) => ({\n    phase: (prevState.phase = 'morning_action_completed')\n    }));\n  }\n\n\n  restart() {\n    console.log('restart')\n    this.setState(() => ({ players_with_roles: [] }));\n    this.setState(() => ({ role_determined: false }));\n    this.setState(() => ({ phase: 'night' }));\n    this.setState(() => ({ suspected_players: [] }));\n    this.setState(() => ({ current_player_id: 0 }));\n    this.setState(() => ({ night_action_to_be_killed: [] }));\n  }\n\n\n  numberOfPlayers(){\n    return(this.state.players.length)\n  }\n\n  numberOfSelectedRoles(){\n    return(Object.values(this.state.n_each_role).reduce((a,b) => a+b, 0))\n  }\n\n  numberOfAliveVillagers() {\n    let count = 0\n    let x;\n    for (x of this.state.players_with_roles) {\n      if (x.side === 0 && x.alive) {\n        count ++;\n      }\n    }\n    return count\n  }\n\n  numberOfAliveWerewolves() {\n    let count = 0\n    let x;\n    for (x of this.state.players_with_roles) {\n      if (x.side === 1 && x.alive) {\n        count ++;\n      }\n    }\n    return count\n  }\n\n  handleWinningSide() {\n    if (this.numberOfAliveVillagers() === this.numberOfAliveWerewolves()) {\n      return 1\n    } else if (this.numberOfAliveWerewolves() === 0) {\n      return 0\n    } else {\n      return -1\n    }\n  }\n\n  morningPhase() {\n    this.setState((prevState) => {\n    phase: prevState.phase = 'morning'\n    })\n  }\n\n  nightPhase() {\n    this.setState((prevState) => {\n    phase: prevState.phase = 'night'\n    })\n  }\n\n  render() {\n    const subtitle = 'プレイヤーを登録してください';\n    let register = (<div>\n        <Header subtitle={subtitle} />\n        <Action\n          players_selected={this.state.players_selected}\n          hasOptions={this.state.players.length > 0}\n          handlePick={this.handlePick}\n        />\n        <Options\n          players={this.state.players}\n          handleDeleteOptions={this.handleDeleteOptions}\n          handleDeleteOption={this.handleDeleteOption}\n          players_selected={this.state.players_selected}\n        />\n        <AddOption\n          handleAddOption={this.handleAddOption}\n          players_selected={this.state.players_selected}\n        />\n        <SelectRoles\n          hasOptions={this.state.players.length > 0}\n          handleSelectRoles={this.handleSelectRoles}\n        />\n        {this.state.players_selected && <p>どの役割を使いますか?</p>}\n        <RoleOptions\n        players_selected={this.state.players_selected}\n        updateNumberOfRoles={this.updateNumberOfRoles}\n        determineRoles={this.determineRoles}\n        />\n\n      </div>);\n\n    let night = (\n      <div>\n      <ShowRole\n        current_player_id={this.state.current_player_id}\n        players_with_roles={this.state.players_with_roles}\n        nightActionRecord={this.nightActionRecord}\n        nextPlayer={this.nextPlayer}\n      />\n      </div>\n      );\n\n    let night_result = (\n      <div>\n        <p>朝になりました｡</p>\n        <ResultOfNight\n          suspected_players={this.suspected_players}\n          night_action_to_be_killed={this.night_action_to_be_killed}\n          handleKilledAtNight={this.handleKilledAtNight}\n          handleWinningSide={this.handleWinningSide}\n          mostSuspiciousPlayer={this.mostSuspiciousPlayer}\n          morningPhase={this.morningPhase}\n          restart={this.restart}\n        />\n      </div>);\n\n    let morning_exile = (\n      <div>\n        <p>追放する人を決めてください｡</p>\n        <ListToBeExiled\n          players_with_roles={this.state.players_with_roles}\n          exile={this.exile}\n        />\n      </div>);\n\n    let morning_result = (\n      <div>\n        <ResultOfMorning\n          handleWinningSide={this.handleWinningSide}\n          to_be_exiled={this.state.to_be_exiled}\n          nightPhase={this.nightPhase}\n          restart={this.restart}\n        />\n      </div>);\n\n    if (!this.state.role_determined){\n      return (\n        register\n      );\n    } else if (this.state.phase === 'night'){\n      return (\n        night\n        );\n    } else if (this.state.phase === 'night_action_completed'){\n      return (\n        night_result\n        );\n    } else if (this.state.phase === 'morning'){\n      return (\n        morning_exile\n        );\n    } else if (this.state.phase === 'morning_action_completed'){\n      return (\n        morning_result\n        );\n    } else {\n      return(<div>else</div>);\n    }\n  }\n  };\n\nconst Header = (props) => {\n  return (\n    <div>\n      <h1>{props.title}</h1>\n      {props.subtitle && <h2>{props.subtitle}</h2>}\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  title: '人狼ゲーム'\n};\n\nconst Action = (props) => {\n  if (props.players_selected){\n    return(<div></div>)\n  }\n  return (\n    <div>\n      <button\n        onClick={props.handlePick}\n        disabled={!props.hasOptions}\n      >\n        What should I do?\n      </button>\n    </div>\n  );\n};\n\nconst Options = (props) => {\n  if (props.players_selected){\n    return(<div></div>)\n  }\n  return (\n    <div>\n      <button onClick={props.handleDeleteOptions}>Remove All</button>\n      {props.players.length === 0 && <p>名前を入力してください｡</p>}\n      {\n        props.players.map((option) => (\n          <Option\n            key={option}\n            optionText={option}\n            handleDeleteOption={props.handleDeleteOption}\n          />\n        ))\n      }\n    </div>\n  );\n};\n\nconst Option = (props) => {\n  return (\n    <div>\n      {props.optionText}\n      <button\n        onClick={(e) => {\n          props.handleDeleteOption(props.optionText);\n        }}\n      >\n        削除\n      </button>\n    </div>\n  );\n};\n\nclass AddOption extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAddOption = this.handleAddOption.bind(this);\n    this.state = {\n      error: undefined\n    };\n  }\n  handleAddOption(e) {\n    e.preventDefault();\n\n    const option = e.target.elements.option.value.trim();\n    const error = this.props.handleAddOption(option);\n\n    this.setState(() => ({ error }));\n\n    if (!error) {\n      e.target.elements.option.value = '';\n    }\n  }\n  render() {\n    if (this.props.players_selected){\n      return(<div></div>)\n    }\n    return (\n      <div>\n        {this.state.error && <p>{this.state.error}</p>}\n        <form onSubmit={this.handleAddOption}>\n          <input type=\"text\" name=\"option\" />\n          <button>追加する</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nconst SelectRoles = (props) => {\n  return (\n    <div>\n      <button\n        disabled={!props.hasOptions}\n        onClick={props.handleSelectRoles}\n      >\n        役割の選択へ\n      </button>\n    </div>\n  );\n};\n\n\nconst RoleOptions = (props) => {\n  if (props.players_selected){\n    return(<div></div>)\n  }\n  return (\n    <div>\n      <Counter\n      role='villager'\n      updateNumberOfRoles={props.updateNumberOfRoles}\n      />\n\n      <Counter\n      role='werewolf'\n      updateNumberOfRoles={props.updateNumberOfRoles}\n      />\n      <button onClick={props.determineRoles}>決定</button>\n    </div>\n  );\n};\n\n\nconst ShowRole = (props) => {\n  let player = props.players_with_roles[props.current_player_id]\n  let name = player.name\n  if (player.alive){\n    return(\n      <div>\n        <p>{name}さんの番です｡ 本当に{name}さんですか?</p>\n        <p>{name}さんは{JapaneseNames[player.role]}です｡</p>\n        <p>{player.action_sentence}</p>\n        <ShowListOfPlayers\n          current_player={player}\n          current_player_id={props.current_player_id}\n          players_with_roles={props.players_with_roles}\n          nightActionRecord={props.nightActionRecord}\n        />\n      </div>\n      );\n  } else {\n    return (\n      <div>\n        <p>{name}さんは死んでいます｡</p>\n        <button\n        onClick={(e) => {\n          props.nextPlayer(props.current_player_id, player.role, player, Object.keys(props.players_with_roles).length)}\n          }\n        >\n        次のプレーヤーへ\n      </button>\n      </div>)\n  }\n\n};\n\nconst ShowListOfPlayers = (props) => {\n  return(\n    <div>\n      {props.players_with_roles.map((player) => {\n        if (player !== props.current_player && player.alive){\n          return (\n            <button\n              key={player.name}\n              onClick={(e) => {\n                props.nightActionRecord(props.current_player_id, props.current_player.role, player, Object.keys(props.players_with_roles).length)}\n              }\n            >\n              {player.name}さんを選ぶ｡\n            </button>\n            )\n        }\n      })}\n    </div>\n    )\n}\n\n\nconst ResultOfNight = (props) => {\n  let x = props.handleKilledAtNight();\n  let y = props.handleWinningSide();\n  let suspected_players = props.mostSuspiciousPlayer(x);\n  if (y === -1) {\n    return(\n      <div>\n        <p>昨日の犠牲者は{x}さんです｡</p>\n        <p>今もっとも疑われているのは</p>\n        {suspected_players.map((player) => {\n          return <p key={player}>{player}さん</p>;\n        })}\n        <button\n          onClick={props.morningPhase}\n        >\n          次へ\n        </button>\n      </div>\n      )\n  } else if (y === 1) {\n    return(\n      <div>\n        <p>昨日の犠牲者は{x}さんです｡</p>\n        <h1>人狼の勝利!</h1>\n        <button\n        onClick={props.restart}\n        >\n        もう1ゲームする\n        </button>\n      </div>\n      )\n  } else if (y === 0) {\n    return(\n      <div>\n        <p>昨日の犠牲者は{x}さんです｡</p>\n        <h1>村人の勝利!</h1>\n        <button\n        onClick={props.restart}\n        >\n        もう1ゲームする\n        </button>\n      </div>\n      )\n  }\n\n}\n\nconst ResultOfMorning = (props) => {\n  let x = props.to_be_exiled[0];\n  let y = props.handleWinningSide();\n  if (y === -1) {\n    return(\n      <div>\n        <p>{x}さん, 最後に遺言をどうぞ｡</p>\n        <button\n          onClick={props.nightPhase}\n        >\n          次へ\n        </button>\n      </div>\n      )\n  } else if (y === 1) {\n    return(\n      <div>\n        <p>{x}さん, 最後に遺言をどうぞ｡</p>\n        <h1>人狼の勝利!</h1>\n        <button\n        onClick={props.restart}\n        >\n        もう1ゲームする\n        </button>\n      </div>\n      )\n  } else if (y === 0) {\n    return(\n      <div>\n        <p>{x}さん, 最後に遺言をどうぞ｡</p>\n        <h1>村人の勝利!</h1>\n        <button\n        onClick={props.restart}\n        >\n        もう1ゲームする\n        </button>\n      </div>\n      )\n  }\n}\n\nconst ListToBeExiled = (props) => {\n  return(\n    <div>\n      {props.players_with_roles.map((player) => {\n        if (player.alive){\n          return (\n            <button\n              key={player.name}\n              onClick={(e) => {\n                props.exile(player)\n                }\n              }\n            >\n              {player.name}さんを追放\n            </button>\n            )\n          }\n      })}\n    </div>\n    )\n}\n\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAddOne = this.handleAddOne.bind(this);\n    this.handleMinusOne = this.handleMinusOne.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.state = {\n      count: 0\n    };\n  }\n  // componentDidMount() {\n  //   const stringCount = localStorage.getItem('counter');\n  //   const count = parseInt(stringCount, 10);\n\n  //   if (!isNaN(count)) {\n  //     this.setState(() => ({ count }));\n  //   }\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.count !== this.state.count) {\n  //     localStorage.setItem('counter', this.state.count);\n  //   }\n  // }\n  handleAddOne() {\n    this.props.updateNumberOfRoles(1, this.props.role)\n    this.setState((prevState) => {\n      return {\n        count: prevState.count + 1\n      };\n    });\n  }\n  handleMinusOne() {\n    this.setState((prevState) => {\n      if (prevState.count === 0){\n        return\n      }\n      this.props.updateNumberOfRoles(-1, this.props.role)\n      return {\n        count: prevState.count - 1\n      };\n    });\n  }\n  handleReset() {\n    this.props.updateNumberOfRoles(0, this.props.role)\n    this.setState(() => {\n      return {\n        count: 0\n      };\n    });\n  }\n  render() {\n    return (\n      <div>\n\n        <p>{JapaneseNames[this.props.role]}:{this.state.count}</p>\n        <button onClick={this.handleAddOne}>+1</button>\n        <button onClick={this.handleMinusOne}>-1</button>\n        <button onClick={this.handleReset}>reset</button>\n      </div>\n    );\n  }\n}\n\nclass Player {\n  constructor(name, alive){\n    this.name = name;\n    this.alive = true\n  }\n}\n\nclass Villager extends Player{\n  constructor(name, alive, role, side, killable){\n    super(name, alive);\n    this.role = 'villager';\n    this.side = 0;\n    this.killable = true;\n    this.action_sentence = 'もっとも疑わしい人を一人選んでください｡';\n  }\n}\n\nclass Werewolf extends Player{\n  constructor(name, alive, role, side, killable){\n    super(name, alive);\n    this.role = 'werewolf';\n    this.side = 1;\n    this.killable = true;\n    this.action_sentence = '今晩襲う人を決めてください｡';\n  }\n}\n\nclass Seer extends Villager{\n  constructor(name, alive, role, side, killable){\n    super(name, alive, side);\n    this.role = 'seer';\n    this.killable = true\n  }\n}\n\n\n// ReactDOM.render(<WerewolfGame />, document.getElementById('app'));\n\nexport default WerewolfGame;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport WerewolfGame from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<WerewolfGame />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}